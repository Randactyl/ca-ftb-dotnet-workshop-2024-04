@page "/results"

@inject HttpClient Http

<PageTitle>Results</PageTitle>

<div class="text-center">
    <h1 class="display-4">Results (@(this.automobiles.Count)):</h1>

    @if (this.automobiles.Count > 0)
    {
        <div class="form-group">
            <div class="row">
                @foreach (AutomobileViewModel automobile in this.automobiles.Where(s => s.Wins > 0 || s.Losses > 0).OrderByDescending(s => s.Score).ThenByDescending(s => s.Wins).ThenBy(s => s.Losses).ThenBy(s => s.AutomobileName))
                {
                    <div class="col-md-3">
                        <h4>@automobile.AutomobileName <button class="btn btn-danger" @onclick="() => this.DeleteAutomobile(automobile.AutomobileName)">Delete</button></h4>
                        <img src="@automobile.AutomobileImage" class="car" alt="@automobile.AutomobileName Car Image" />
                        <span><strong>Score</strong>: @automobile.Score.ToString("F3") <strong>Record</strong>: @automobile.Wins-@automobile.Losses</span>
                    </div>
                }
            </div>
        </div>
        if (this.automobiles.Any(s => s is { Wins: 0, Losses: 0 }))
        {
            <hr />
            <h2 class="display-4">No votes yet:</h2>
            <div class="form-group">
                <div class="row">
                    @foreach (AutomobileViewModel automobile in this.automobiles.Where(s => s is { Wins: 0, Losses: 0 }).OrderBy(s => s.AutomobileName))
                    {
                        <div class="col-md-3">
                            <h4>@automobile.AutomobileName <button class="btn btn-danger" @onclick="() => this.DeleteAutomobile(automobile.AutomobileName)">Delete</button></h4>
                            <img src="@automobile.AutomobileImage" class="car" alt="@automobile.AutomobileName Car Image" />
                            <span><strong>Score</strong>: @automobile.Score.ToString("F3") <strong>Record</strong>: @automobile.Wins-@automobile.Losses</span>
                        </div>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <p>No automobiles found.</p>
    }
</div>

<style>
    img.car {
        height: 90%;
        width: 100%;
        object-fit: contain;
    }

    .col-md-3 {
        margin-top: 25px;
        padding-bottom: 25px;
    }

    h4 {
        margin-botton: 0;
    }

    span {
        display: block;
        margin-top: -10px;
    }
</style>

@code {
    private List<AutomobileViewModel> automobiles = [];

    protected override async Task OnInitializedAsync()
    {
        await this.GetResults();
    }

    private async Task GetResults()
    {
        HttpResponseMessage response = await this.Http.GetAsync("GetResults");
        this.automobiles = await response.Content.ReadFromJsonAsync<List<AutomobileViewModel>>() ?? [];
    }

    private async Task DeleteAutomobile(string automobileName)
    {
        HttpResponseMessage response = await this.Http.DeleteAsync($"DeleteAutomobile/{automobileName}");
        await this.GetResults();
    }
}
